{"version":3,"sources":["Feedback/FeedbackOptions.js","Feedback/Statistics.js","Feedback/Section.js","Feedback/Notification.js","App.js","index.js","Feedback/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","feedback__buttons","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","setState","prevState","visible","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sQAyBeA,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAOC,kBAElBC,QAAS,kBAAMN,EAAgBE,IAHjC,SAKGA,GAHIA,SCaAK,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCOSC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8DEC,E,4MA3DbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPV,gBAAkB,SAAAD,GAChB,EAAKqB,UACH,SAAAC,GAAS,sBAAQtB,EAAUsB,EAAUtB,GAAW,MAChD,WACE,EAAKqB,SAAS,CAAEE,SAAS,Q,EAK/BC,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBc,gCAAkC,WAChC,MAAsB,EAAKL,MAAnBX,EAAR,EAAQA,KAAME,EAAd,EAAcA,IACVE,EAAqB,EAIzB,OAHa,IAATJ,GAAsB,IAARE,IAChBE,EAAsBJ,GAAQE,EAAMF,GAAS,KAExCiB,KAAKC,MAAMd,I,4CAGpB,WACE,MAAwCe,KAAKR,MAArCX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKY,EAA5B,EAA4BA,QAE5B,OACE,gCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB2B,KAAK3B,oBAI1B,eAAC,EAAD,CAASc,MAAM,aAAf,WACIQ,GAAW,cAAC,EAAD,CAAcL,QAAQ,sBAClCK,GACC,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,8C,GAnDrBI,aCDlBC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,kBAAoB,uC","file":"static/js/main.5be66cd6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button\n          className={styles.feedback__buttons}\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './Feedback/FeedbackOptions';\nimport Statistics from './Feedback/Statistics';\nimport Section from './Feedback/Section';\nimport Notification from './Feedback/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = options => {\n    this.setState(\n      prevState => ({ [options]: prevState[options] + 1 }),\n      () => {\n        this.setState({ visible: true });\n      },\n    );\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, bad } = this.state;\n    let positivePercentage = 0;\n    if (good !== 0 || bad !== 0) {\n      positivePercentage = (good / (bad + good)) * 100;\n    }\n    return Math.round(positivePercentage);\n  };\n\n  render() {\n    const { good, neutral, bad, visible } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!visible && <Notification message=\"No feedback given\" />}\n          {visible && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"Feedback_feedback__buttons__3GFNw\"};"],"sourceRoot":""}