{"version":3,"sources":["Feedback/Feedback.js","App.js","index.js"],"names":["Feedback","state","good","neutral","bad","feedbackGod","setState","prevState","feedbackNeutral","feedbackBad","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","this","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+OA0DeA,E,4MAvDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,YAAc,WACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEL,KAAMK,EAAUL,KAAO,O,EAGvDM,gBAAkB,WAChB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,QAAU,O,EAIjCM,YAAc,WACZ,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAAEH,IAAKG,EAAUH,IAAM,O,EAGrDM,mBAAqB,WACnB,MAA+B,EAAKT,MAEpC,OAFA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBO,gCAAkC,WAChC,MAAsB,EAAKV,MAAnBC,EAAR,EAAQA,KACFU,EAASV,GADf,EAAcE,IACeF,GAAS,IACtC,OAAOW,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKd,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,gCACE,uDACA,gCACE,wBAAQY,QAASD,KAAKV,YAAtB,kBACA,wBAAQW,QAASD,KAAKP,gBAAtB,qBACA,wBAAQQ,QAASD,KAAKN,YAAtB,oBAEF,4CAEA,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWW,KAAKL,wBAChB,oDAAuBK,KAAKJ,kCAA5B,c,GAlDeM,aCSRC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4a3108c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackGod = () => {\n    this.setState(prevState => ({ good: prevState.good + 1 }));\n  };\n\n  feedbackNeutral = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  feedbackBad = () => {\n    this.setState(prevState => ({ bad: prevState.bad + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, bad } = this.state;\n    const total = (good / (bad + good)) * 100;\n    return Math.round(total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <h2>Please leave feedback</h2>\n        <div>\n          <button onClick={this.feedbackGod}>Good</button>\n          <button onClick={this.feedbackNeutral}>Neutral</button>\n          <button onClick={this.feedbackBad}>Bad</button>\n        </div>\n        <h2>Statistics</h2>\n        {/* <p>No feedback given</p> */}\n        <p>Good: {good}</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad}</p>\n        <p>Total: {this.countTotalFeedback()}</p>\n        <p>Positive feedback: {this.countPositiveFeedbackPercentage()}%</p>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Feedback from './Feedback/Feedback';\n\nfunction App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}